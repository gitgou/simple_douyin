syntax = "proto3";
package douyin;
option go_package="relationdemo";
import "user.proto";
enum RelationActionType{
    RELATION_ACTION_TYPE_START = 0;
    ACTION_FOLLOW = 1;
    ACTION_CANCEL_FOLLOW = 2;
}

message  RelationRequest {
    int64 user_id = 1;
    int64 to_user_id = 2;
    int64 action_type = 3;
}

message RelationResponse {
    BaseResp baseResp = 1;
}

message GetFollowRequest {
    int64 user_id = 1;
}

message  GetFollowResponse {
    BaseResp baseResp = 1;
    repeated User user_list = 2; 
}

message GetFollowerRequest {
    int64 user_id = 1;
}

message GetFollowerResponse {
    BaseResp baseResp = 1;
    repeated User user_list = 2;
}

message FriendUser {
    int64 id = 1; // 用户id
    string name = 2; // 用户名称
    int64 follow_count = 3; // 关注总数
    int64 follower_count = 4; // 粉丝总数
    bool is_follow = 5; // true-已关注，false-未关注
    string avatar = 6; //用户头像
    string background_image = 7;
    int64 work_count = 8; //作品数
    string signature = 9;
    int64 favorite_count = 10; //点赞数
    int64 total_favorited = 11; //获赞数
    int64 msgType = 12; //最新的消息类型
    string message = 13; //最新消息 
}

message GetFriendRequest {
    int64 user_id = 1;
}

message GetFriendResponse {
    BaseResp baseResp = 1;
    repeated FriendUser user_list = 2;
}

enum CheckFollowRelationType{
    // 1:查看是否关注其他用户; 2 查看是否是粉丝，即被关注
    START = 0;
    FOLLOW = 1;
    FOLLOWER = 2;
}
message  CheckFollowRelationRequest {
    int64 user_id = 1;
    int64 to_user_id = 2;
    int64 relation_type = 3; // 1:查看是否关注其他用户; 2 查看是否是粉丝，即被关注
}

message  CheckFollowRelationResponse{
    bool follow = 1;
}


service RelationService{
    rpc Relation(RelationRequest) returns (RelationResponse){};
    rpc GetFollow(GetFollowRequest) returns (GetFollowResponse) {};
    rpc GetFollower(GetFollowerRequest) returns (GetFollowerResponse) {};
    rpc GetFriend(GetFriendRequest) returns (GetFriendResponse) {};
    rpc CheckFollowRelation(CheckFollowRelationRequest) returns (CheckFollowRelationResponse){};
}